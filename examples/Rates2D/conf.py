#-*- coding:utf-8 -*-
import numpy as np
# import conf2
# integration_method = "baryCenterRT" #"retriangulate" # "baryCenter" #
# is_PlacePointOnCap = 0  # 0 = nocaps, 1 = withcaps

delta = 0.1
ansatz = "CG"
boundaryConditionType = "Dirichlet" # "Neumann" #
model_f = "linear" # "constant" #
model_kernel = "constant" # "labeled" #
quadrule_outer = "7"
quadrule_inner = "1"

# Quadrature rules -----------------------------------------------------------------------------------------------------
quadrules = {
    "7":    [
             np.array([[0., 0.],
                       [0.5, 0.],
                       [1., 0.],
                       [1. / 3., 1. / 3.],
                       [0., 0.5],
                       [0.5, 0.5],
                       [0., 1.]]),

            0.5 * np.array([1. / 20., 4. / 30., 1. / 20., 9. / 20., 4. / 30., 4. / 30., 1. / 20.])
            ],

    "16":    [
            np.array([[0.33333333, 0.33333333],
                      [0.45929259, 0.45929259],
                      [0.45929259, 0.08141482],
                      [0.08141482, 0.45929259],
                      [0.17056931, 0.17056931],
                      [0.17056931, 0.65886138],
                      [0.65886138, 0.17056931],
                      [0.05054723, 0.05054723],
                      [0.05054723, 0.89890554],
                      [0.89890554, 0.05054723],
                      [0.26311283, 0.72849239],
                      [0.72849239, 0.00839478],
                      [0.00839478, 0.26311283],
                      [0.72849239, 0.26311283],
                      [0.26311283, 0.00839478],
                      [0.00839478, 0.72849239]]),
            0.5 * np.array([0.14431560767779,
                            0.09509163426728,
                            0.09509163426728,
                            0.09509163426728,
                            0.10321737053472,
                            0.10321737053472,
                            0.10321737053472,
                            0.03245849762320,
                            0.03245849762320,
                            0.03245849762320,
                            0.02723031417443,
                            0.02723031417443,
                            0.02723031417443,
                            0.02723031417443,
                            0.02723031417443,
                            0.02723031417443])
            ],
    "1":    [
            np.array([[1./3., 1./3.]]),

            0.5 * np.array([1.0])
            ],
    "3":    [
            np.array([[1. / 6., 1. / 6.],
                      [1. / 6., 2. / 3.],
                      [2. / 3., 1. / 6.]]),

            0.5 * 1. / 3 * np.ones(3)
            ]


}

py_Px = quadrules[quadrule_outer][0]
dx =  quadrules[quadrule_outer][1]
py_Py = quadrules[quadrule_inner][0]
dy = quadrules[quadrule_inner][1]